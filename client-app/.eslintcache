[{"/Users/idaharaedem/Reactivities/client-app/src/index.tsx":"1","/Users/idaharaedem/Reactivities/client-app/src/reportWebVitals.ts":"2","/Users/idaharaedem/Reactivities/client-app/src/app/App.tsx":"3","/Users/idaharaedem/Reactivities/client-app/src/components/nav/Navbar.tsx":"4","/Users/idaharaedem/Reactivities/client-app/src/components/activities/dashbooard/ActivityDashboard.tsx":"5","/Users/idaharaedem/Reactivities/client-app/src/components/activities/dashbooard/ActivityList.tsx":"6","/Users/idaharaedem/Reactivities/client-app/src/components/activities/details/ActivityDetails.tsx":"7","/Users/idaharaedem/Reactivities/client-app/src/components/activities/form/ActivityForm.tsx":"8","/Users/idaharaedem/Reactivities/client-app/src/app/models/Activity.ts":"9"},{"size":467,"mtime":1613542806162,"results":"10","hashOfConfig":"11"},{"size":425,"mtime":1611814649520,"results":"12","hashOfConfig":"11"},{"size":2500,"mtime":1613505067517,"results":"13","hashOfConfig":"11"},{"size":725,"mtime":1612347037965,"results":"14","hashOfConfig":"11"},{"size":2205,"mtime":1613542229589,"results":"15","hashOfConfig":"11"},{"size":1530,"mtime":1613542242413,"results":"16","hashOfConfig":"11"},{"size":1206,"mtime":1613542260854,"results":"17","hashOfConfig":"11"},{"size":3096,"mtime":1613542377734,"results":"18","hashOfConfig":"11"},{"size":173,"mtime":1612205136175,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"n24tgc",{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"24"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"24"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},"/Users/idaharaedem/Reactivities/client-app/src/index.tsx",[],"/Users/idaharaedem/Reactivities/client-app/src/reportWebVitals.ts",[],["42","43"],"/Users/idaharaedem/Reactivities/client-app/src/app/App.tsx",["44"],"import React, { useState, useEffect, Fragment } from \"react\";\nimport axios from \"axios\";\nimport { Container } from \"semantic-ui-react\";\nimport \"semantic-ui-css/semantic.min.css\";\nimport { IActivity } from \"./models/Activity\";\nimport { Navbar } from \"../components/nav/Navbar\";\nimport { ActivityDashboard } from \"../components/activities/dashbooard/ActivityDashboard\";\nimport { act } from \"@testing-library/react\";\n\nconst App = () => {\n  const [activities, setActivities] = useState<IActivity[]>([]);\n  const [selectedActivity, setSelectedActivity] = useState<IActivity | null>(\n    null\n  );\n  const [editMode, setEditMode] = useState(false);\n\n  const handleSelectedActivity = (id: string) => {\n    //returns a new array\n    setSelectedActivity(activities.filter((act) => act.id === id)[0]);\n    setEditMode(false);\n  };\n\n  const handleSelectActivityForm = () => {\n    setSelectedActivity(null);\n    setEditMode(true);\n  };\n\n  const handleCreateActivity = (activity: IActivity) => {\n\n    setActivities([...activities, activity]);\n    setSelectedActivity(activity);\n    setEditMode(false);\n  };\n\n  const handleEditActivity = (activity: IActivity) => {\n\n    setActivities([...activities.filter(a => a.id !== activity.id), activity])\n    setSelectedActivity(activity);\n    setEditMode(false);\n  };\n\n  const handleDeleteActivity = (id: string) => {\n    setActivities([...activities.filter(act => act.id !== id)])\n  }\n\n  useEffect(() => {\n    axios\n      .get<IActivity[]>(\"http://localhost:5000/api/activities\")\n      .then((response) => {\n        let activities: IActivity[] = [];\n        response.data.forEach(activity => {\n          activity.date = activity.date.split('.')[0];\n          activities.push(activity)\n        })\n        setActivities(activities);\n      });\n    // Empty array ensures our use effect runs one time only\n  }, []);\n\n  return (\n    //Can use instead of div\n    <Fragment>\n      <Navbar openActivityForm={handleSelectActivityForm} />\n      <Container style={{ marginTop: \"8em\" }}>\n        <ActivityDashboard\n          activities={activities}\n          selectActivity={handleSelectedActivity}\n          selectedActivity={selectedActivity}\n          editMode={editMode}\n          setEditMode={setEditMode}\n          setSelectedActivity={setSelectedActivity}\n          createActivity = {handleCreateActivity}\n          editActivity = {handleEditActivity}\n          deleteActivity = {handleDeleteActivity}\n        />\n      </Container>\n    </Fragment>\n  );\n};\n\nexport default App;\n","/Users/idaharaedem/Reactivities/client-app/src/components/nav/Navbar.tsx",[],"/Users/idaharaedem/Reactivities/client-app/src/components/activities/dashbooard/ActivityDashboard.tsx",["45","46"],"import React from 'react';\nimport { Grid, GridColumn} from 'semantic-ui-react';\nimport { IActivity } from '../../../app/models/Activity';\nimport { ActivityList } from './ActivityList';\nimport {Details} from '../details/ActivityDetails';\nimport {ActivityForm} from '../form/ActivityForm';\n\ninterface IProps {\n    activities: IActivity[];\n    selectActivity: (id:string) => void;\n    selectedActivity: IActivity | null;\n    editMode: boolean;\n    setEditMode: (editMode: boolean) => void;\n    setSelectedActivity: (activity: IActivity | null) => void;\n    createActivity: (activity: IActivity) => void;\n    editActivity: (activity:IActivity) => void;\n    deleteActivity: (id: string) => void;\n}\n\n//React.FC identifies the type of component youre passing through\nexport const ActivityDashboard: React.FC<IProps> = ({\n    activities, \n    selectActivity, \n    selectedActivity, \n    editMode, \n    setEditMode, \n    setSelectedActivity,\n    createActivity,\n    editActivity,\n    deleteActivity\n    }) => {\n    \n    return (\n        <Grid>\n            <Grid.Column width={10}>\n              <ActivityList activities = {activities} selectActivity = {selectActivity} deleteActivity = {deleteActivity}/>\n            </Grid.Column>\n            <GridColumn width={6}>\n                {\n                    // to the right of && is only executed if that is not equal to null\n                    selectedActivity && !editMode && ( \n                    \n                    <Details \n                    activity = {selectedActivity} \n                    setEditMode = {setEditMode} \n                    setSelectedActivity = {setSelectedActivity} />\n                    )}\n                \n                {\n                    editMode &&  (<ActivityForm \n                    //in order to get the form to reset when create button is clicked\n                    key ={selectedActivity && selectedActivity.id || 0}\n                    setEditMode = {setEditMode}\n                    initialFormActivity = {selectedActivity!} \n                    createActivity = {createActivity}\n                    editActivity = {editActivity}/>)\n                }\n               \n            </GridColumn>\n        </Grid>\n    )\n}\n","/Users/idaharaedem/Reactivities/client-app/src/components/activities/dashbooard/ActivityList.tsx",[],"/Users/idaharaedem/Reactivities/client-app/src/components/activities/details/ActivityDetails.tsx",[],"/Users/idaharaedem/Reactivities/client-app/src/components/activities/form/ActivityForm.tsx",[],"/Users/idaharaedem/Reactivities/client-app/src/app/models/Activity.ts",[],["47","48"],{"ruleId":"49","replacedBy":"50"},{"ruleId":"51","replacedBy":"52"},{"ruleId":"53","severity":1,"message":"54","line":8,"column":10,"nodeType":"55","messageId":"56","endLine":8,"endColumn":13},{"ruleId":"57","severity":1,"message":"58","line":52,"column":44,"nodeType":"59","messageId":"60","endLine":52,"endColumn":46},{"ruleId":"57","severity":1,"message":"58","line":52,"column":67,"nodeType":"59","messageId":"60","endLine":52,"endColumn":69},{"ruleId":"49","replacedBy":"61"},{"ruleId":"51","replacedBy":"62"},"no-native-reassign",["63"],"no-negated-in-lhs",["64"],"@typescript-eslint/no-unused-vars","'act' is defined but never used.","Identifier","unusedVar","no-mixed-operators","Unexpected mix of '&&' and '||'.","LogicalExpression","unexpectedMixedOperator",["63"],["64"],"no-global-assign","no-unsafe-negation"]